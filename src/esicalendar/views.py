import json

# from django.shortcuts import render
from django import http
from django.views.generic.base import View
from django.contrib.auth.models import Group

from esicalendar.models import User


class JSONResponseMixin(object):
    def render_to_response(self, context):
        "Returns a JSON response containing 'context' as payload"
        return self.get_json_response(self.convert_context_to_json(context))

    def get_json_response(self, content, **httpresponse_kwargs):
        "Construct an `HttpResponse` object."
        return http.HttpResponse(content,
                                 content_type='application/json',
                                 **httpresponse_kwargs)

    def convert_context_to_json(self, context):
        "Convert the context dictionary into a JSON object"
        return json.dumps(context)


class UserAPIView(JSONResponseMixin, View):
    def get(self, context, pk):
        user = User.objects.get(pk=pk)
        return self.render_to_response({
            'username': user.username,
            'full_name': user.get_full_name(),
            'first_name': user.first_name,
            'last_name': user.last_name,
            'short_name': user.get_short_name()
        })


class GroupAPIView(JSONResponseMixin, View):
    def get(self, context, pk):
        group = Group.objects.get(pk=pk)
        return self.render_to_response({
            'name': group.name,
            'members': [
                {'name': user.get_full_name(), 'pk': user.pk}
                for user in User.objects.filter(groups=group)
            ]
        })


class GroupListAPIView(JSONResponseMixin, View):
    def get(self, context):
        groups = [{'name': group.name, 'pk': group.pk,
                   'members': len(User.objects.filter(groups=group))}
                  for group in Group.objects.all()]
        return self.render_to_response(groups)


# class SignUpAPIView(JSONResponseMixin, View):
#     def post(self, context):
#         print self.request.POST
#         User.objects.create_user('nickname', 'email@address',
#                                  first_name='Autogenerated',
#                                  last_name='User',
#                                  password='hello-world',
#                                  idnumber=12345678,
#                                  approved=False)
#         return JSONResponseMixin.render_to_response(
#             self, {'data': str(self.request.POST)})
